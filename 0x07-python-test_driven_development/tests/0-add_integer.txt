Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 1 and 7
    >>> add_integer(1, 7)
    10

Subtracting 100 and 8
    >>> add_integer(100, -8)
    92

Adding 3.1 and 98
    >>> add_integer(3.1)
    101

Subtracting 100.3 and 4
	    >>> add_integer(100.3, -4)
	    96

Adding an integer number and a string
    >>> add_integer(7, "hellooo")
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding a letter and a number
    >>> add_integer('2', 2)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding two letters
    >>> add_integer('2', '8')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a tuple
    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a number and a list
    >>> add_integer(123, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing a string
    >>> add_integer("Hello")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding two float numbers
    >>> add_integer(2.9, 2.9)
    4

Subtracting 98 and 2
    >>> add_integer(-2)
    96

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer